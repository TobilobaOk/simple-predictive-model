{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"bKRyzIIFFw9S"},"outputs":[],"source":["#import statement\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import sklearn\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LinearRegression\n","from sklearn.metrics import mean_squared_error,r2_score\n","import warnings\n","warnings.filterwarnings('ignore')\n","\n","\n","df=pd.read_csv(\"/content/drive/MyDrive/pluralcode data science/NigeriaInflationRates.csv.xls\")"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2nQS5WHnH2XU","executionInfo":{"status":"ok","timestamp":1738354823667,"user_tz":0,"elapsed":41752,"user":{"displayName":"Segun","userId":"05477020424668980431"}},"outputId":"5156b3d7-a8be-4ac8-de3f-55c09be277bf"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"19d6-MaNI37J","executionInfo":{"status":"ok","timestamp":1738237905172,"user_tz":-60,"elapsed":21,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"c66d534a-52a7-4c4a-b643-9556c76e8b98"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Year  Month  Inflation_Rate  Crude Oil Price  Production  \\\n","0    2008      1            8.60            94.26        2.17   \n","1    2008      2            8.00            98.15        2.08   \n","2    2008      3            7.80           103.73        2.06   \n","3    2008      4            8.20           116.73        1.96   \n","4    2008      5            9.70           126.57        2.05   \n","..    ...    ...             ...              ...         ...   \n","193  2024      2           31.70            86.08        1.32   \n","194  2024      3           33.20            88.80        1.23   \n","195  2024      4           33.69            93.12        1.28   \n","196  2024      5           33.95            84.01        1.25   \n","197  2024      6           34.19            83.64        1.28   \n","\n","     Crude Oil Export    CPI_Food  CPI_Energy  CPI_Health  CPI_Transport  \\\n","0                1.72   75.534431   84.612846   83.863139      86.530038   \n","1                1.63   75.154185   85.231632   83.365891      88.355236   \n","2                1.61   78.242523   83.251516   86.082993      84.376304   \n","3                1.51   79.434268   84.348830   89.445332      88.600334   \n","4                1.60   80.783677   85.574027   90.540461      87.932833   \n","..                ...         ...         ...         ...            ...   \n","193              0.87  846.846533  543.893969  494.844568     570.034088   \n","194              0.78  877.472863  558.813016  502.912687     579.821453   \n","195              0.83  899.453386  571.960431  510.095879     592.282753   \n","196              0.80  920.005281  583.894158  517.391784     606.408076   \n","197              0.83  943.458769  596.496022  524.747711     620.966251   \n","\n","     CPI_Communication  CPI_Education  \n","0            83.129440      75.284466  \n","1            82.889814      75.457619  \n","2            81.893471      74.826847  \n","3            93.937865      73.664248  \n","4            97.553285      74.880442  \n","..                 ...            ...  \n","193         234.228948     469.899712  \n","194         234.694654     476.890292  \n","195         235.335975     483.719840  \n","196         235.850405     490.779792  \n","197         236.061986     498.242239  \n","\n","[198 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-3bc1eed8-2c14-401c-ab32-316b439c68cb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Month</th>\n","      <th>Inflation_Rate</th>\n","      <th>Crude Oil Price</th>\n","      <th>Production</th>\n","      <th>Crude Oil Export</th>\n","      <th>CPI_Food</th>\n","      <th>CPI_Energy</th>\n","      <th>CPI_Health</th>\n","      <th>CPI_Transport</th>\n","      <th>CPI_Communication</th>\n","      <th>CPI_Education</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2008</td>\n","      <td>1</td>\n","      <td>8.60</td>\n","      <td>94.26</td>\n","      <td>2.17</td>\n","      <td>1.72</td>\n","      <td>75.534431</td>\n","      <td>84.612846</td>\n","      <td>83.863139</td>\n","      <td>86.530038</td>\n","      <td>83.129440</td>\n","      <td>75.284466</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2008</td>\n","      <td>2</td>\n","      <td>8.00</td>\n","      <td>98.15</td>\n","      <td>2.08</td>\n","      <td>1.63</td>\n","      <td>75.154185</td>\n","      <td>85.231632</td>\n","      <td>83.365891</td>\n","      <td>88.355236</td>\n","      <td>82.889814</td>\n","      <td>75.457619</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2008</td>\n","      <td>3</td>\n","      <td>7.80</td>\n","      <td>103.73</td>\n","      <td>2.06</td>\n","      <td>1.61</td>\n","      <td>78.242523</td>\n","      <td>83.251516</td>\n","      <td>86.082993</td>\n","      <td>84.376304</td>\n","      <td>81.893471</td>\n","      <td>74.826847</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2008</td>\n","      <td>4</td>\n","      <td>8.20</td>\n","      <td>116.73</td>\n","      <td>1.96</td>\n","      <td>1.51</td>\n","      <td>79.434268</td>\n","      <td>84.348830</td>\n","      <td>89.445332</td>\n","      <td>88.600334</td>\n","      <td>93.937865</td>\n","      <td>73.664248</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2008</td>\n","      <td>5</td>\n","      <td>9.70</td>\n","      <td>126.57</td>\n","      <td>2.05</td>\n","      <td>1.60</td>\n","      <td>80.783677</td>\n","      <td>85.574027</td>\n","      <td>90.540461</td>\n","      <td>87.932833</td>\n","      <td>97.553285</td>\n","      <td>74.880442</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>193</th>\n","      <td>2024</td>\n","      <td>2</td>\n","      <td>31.70</td>\n","      <td>86.08</td>\n","      <td>1.32</td>\n","      <td>0.87</td>\n","      <td>846.846533</td>\n","      <td>543.893969</td>\n","      <td>494.844568</td>\n","      <td>570.034088</td>\n","      <td>234.228948</td>\n","      <td>469.899712</td>\n","    </tr>\n","    <tr>\n","      <th>194</th>\n","      <td>2024</td>\n","      <td>3</td>\n","      <td>33.20</td>\n","      <td>88.80</td>\n","      <td>1.23</td>\n","      <td>0.78</td>\n","      <td>877.472863</td>\n","      <td>558.813016</td>\n","      <td>502.912687</td>\n","      <td>579.821453</td>\n","      <td>234.694654</td>\n","      <td>476.890292</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>2024</td>\n","      <td>4</td>\n","      <td>33.69</td>\n","      <td>93.12</td>\n","      <td>1.28</td>\n","      <td>0.83</td>\n","      <td>899.453386</td>\n","      <td>571.960431</td>\n","      <td>510.095879</td>\n","      <td>592.282753</td>\n","      <td>235.335975</td>\n","      <td>483.719840</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>2024</td>\n","      <td>5</td>\n","      <td>33.95</td>\n","      <td>84.01</td>\n","      <td>1.25</td>\n","      <td>0.80</td>\n","      <td>920.005281</td>\n","      <td>583.894158</td>\n","      <td>517.391784</td>\n","      <td>606.408076</td>\n","      <td>235.850405</td>\n","      <td>490.779792</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>2024</td>\n","      <td>6</td>\n","      <td>34.19</td>\n","      <td>83.64</td>\n","      <td>1.28</td>\n","      <td>0.83</td>\n","      <td>943.458769</td>\n","      <td>596.496022</td>\n","      <td>524.747711</td>\n","      <td>620.966251</td>\n","      <td>236.061986</td>\n","      <td>498.242239</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>198 rows Ã— 12 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3bc1eed8-2c14-401c-ab32-316b439c68cb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3bc1eed8-2c14-401c-ab32-316b439c68cb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3bc1eed8-2c14-401c-ab32-316b439c68cb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-af353cc3-9514-4739-af3d-58ae73870c43\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-af353cc3-9514-4739-af3d-58ae73870c43')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-af353cc3-9514-4739-af3d-58ae73870c43 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a4855ad3-292b-4cee-a7f0-047a57405472\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a4855ad3-292b-4cee-a7f0-047a57405472 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 198,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 2008,\n        \"max\": 2024,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          2008,\n          2009,\n          2013\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1,\n        \"max\": 12,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          11,\n          10,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.456105731458888,\n        \"min\": 7.7,\n        \"max\": 34.19,\n        \"num_unique_values\": 152,\n        \"samples\": [\n          18.72,\n          31.7,\n          11.02\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Crude Oil Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.58637951318266,\n        \"min\": 14.28,\n        \"max\": 138.74,\n        \"num_unique_values\": 194,\n        \"samples\": [\n          65.27,\n          60.02,\n          65.62\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Production\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4123414782251126,\n        \"min\": 0.94,\n        \"max\": 2.88,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          1.2,\n          1.5,\n          1.69\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Crude Oil Export\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.41234147822511263,\n        \"min\": 0.49,\n        \"max\": 2.43,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          0.75,\n          1.05,\n          1.24\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI_Food\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 200.0007540292498,\n        \"min\": 75.15418502,\n        \"max\": 943.458769,\n        \"num_unique_values\": 198,\n        \"samples\": [\n          147.4595119,\n          250.0279855,\n          93.49872479\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI_Energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 122.47890600909196,\n        \"min\": 83.25151603,\n        \"max\": 596.4960221,\n        \"num_unique_values\": 198,\n        \"samples\": [\n          157.9921298,\n          248.5476656,\n          94.34016748\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI_Health\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 107.9716708764683,\n        \"min\": 83.3658912,\n        \"max\": 524.7477114,\n        \"num_unique_values\": 198,\n        \"samples\": [\n          139.3994174,\n          198.335966,\n          99.15349553\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI_Transport\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 130.4670476378838,\n        \"min\": 84.37630371,\n        \"max\": 620.9662515,\n        \"num_unique_values\": 198,\n        \"samples\": [\n          144.9769944,\n          222.676474,\n          95.96370463\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI_Communication\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 42.279733650441976,\n        \"min\": 81.89347122,\n        \"max\": 236.0619864,\n        \"num_unique_values\": 196,\n        \"samples\": [\n          161.3057334,\n          138.8620268,\n          99.44087106\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI_Education\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 108.0702925059867,\n        \"min\": 73.66424802,\n        \"max\": 498.2422389,\n        \"num_unique_values\": 198,\n        \"samples\": [\n          133.3261438,\n          209.5678374,\n          92.26170844\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["df[\"Inflation_Rate\"]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"8Mi2ohIJSZqj","executionInfo":{"status":"ok","timestamp":1738237905172,"user_tz":-60,"elapsed":19,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"fea17c4c-14f1-4d6b-fe4b-a8ca224d9796"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       8.60\n","1       8.00\n","2       7.80\n","3       8.20\n","4       9.70\n","       ...  \n","193    31.70\n","194    33.20\n","195    33.69\n","196    33.95\n","197    34.19\n","Name: Inflation_Rate, Length: 198, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Inflation_Rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8.60</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>8.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7.80</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>8.20</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>9.70</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>193</th>\n","      <td>31.70</td>\n","    </tr>\n","    <tr>\n","      <th>194</th>\n","      <td>33.20</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>33.69</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>33.95</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>34.19</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>198 rows Ã— 1 columns</p>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":["df[\"Inflation_Rate\"].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"knlYFCzYS5vm","executionInfo":{"status":"ok","timestamp":1738237905172,"user_tz":-60,"elapsed":18,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"235e793f-477e-43b9-dd32-26f94343ddc3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    198.000000\n","mean      14.068232\n","std        5.456106\n","min        7.700000\n","25%       10.625000\n","50%       12.735000\n","75%       16.040000\n","max       34.190000\n","Name: Inflation_Rate, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Inflation_Rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>198.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>14.068232</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>5.456106</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>7.700000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>10.625000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>12.735000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>16.040000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>34.190000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":77}]},{"cell_type":"code","source":["plt.boxplot(df[\"Inflation_Rate\"])\n","plt.title(\"Boxplot of Inflation_Rate Value\")\n","plt.ylabel(\"Inflation_Rate\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"TOkbPxjzTTvB","executionInfo":{"status":"ok","timestamp":1738237905172,"user_tz":-60,"elapsed":16,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"843c9345-1304-4a63-e6cd-ce0f13406479"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["Q1 = df[\"Inflation_Rate\"].quantile(0.25)\n","Q3 = df[\"Inflation_Rate\"].quantile(0.75)\n","print(Q1,Q3)\n","IQR = Q3 - Q1\n","print(IQR)\n","\n","lower_bound = Q1 - 1.5 * IQR\n","upper_bound = Q3 + 1.5 * IQR\n","print(lower_bound)\n","print(upper_bound)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OZ_M4ys7TxXU","executionInfo":{"status":"ok","timestamp":1738237905172,"user_tz":-60,"elapsed":14,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"f45de420-2fdb-4105-cc42-c81dec018fba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10.625 16.04\n","5.414999999999999\n","2.5025000000000013\n","24.162499999999998\n"]}]},{"cell_type":"code","source":["df[\"Inflation_Rate\"] = np.where(df[\"Inflation_Rate\"] > upper_bound, upper_bound, df[\"Inflation_Rate\"])"],"metadata":{"id":"rCQRnOsnUQ6V"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df[\"Inflation_Rate\"].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"PKMMVnFEVAKo","executionInfo":{"status":"ok","timestamp":1738237905534,"user_tz":-60,"elapsed":374,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"44b636f9-fe72-4e9c-f54c-778761ef4025"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    198.000000\n","mean      13.725745\n","std        4.480942\n","min        7.700000\n","25%       10.625000\n","50%       12.735000\n","75%       16.040000\n","max       24.162500\n","Name: Inflation_Rate, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Inflation_Rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>198.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>13.725745</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>4.480942</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>7.700000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>10.625000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>12.735000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>16.040000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>24.162500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":81}]},{"cell_type":"code","source":["plt.boxplot(df[\"Inflation_Rate\"])\n","plt.title(\"Boxplot of Inflation_Rate Value\")\n","plt.ylabel(\"Inflation_Rate\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"9gJOURr2UlyP","executionInfo":{"status":"ok","timestamp":1738237905534,"user_tz":-60,"elapsed":15,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"aba171a5-2043-4715-d9b5-4ce967cd4158"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WKYE2uleWgov","executionInfo":{"status":"ok","timestamp":1738237905535,"user_tz":-60,"elapsed":15,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"55ce8bf8-9e4c-4825-c8d5-22910d4277d3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 198 entries, 0 to 197\n","Data columns (total 12 columns):\n"," #   Column             Non-Null Count  Dtype  \n","---  ------             --------------  -----  \n"," 0   Year               198 non-null    int64  \n"," 1   Month              198 non-null    int64  \n"," 2   Inflation_Rate     198 non-null    float64\n"," 3   Crude Oil Price    197 non-null    float64\n"," 4   Production         197 non-null    float64\n"," 5   Crude Oil Export   197 non-null    float64\n"," 6   CPI_Food           198 non-null    float64\n"," 7   CPI_Energy         198 non-null    float64\n"," 8   CPI_Health         198 non-null    float64\n"," 9   CPI_Transport      198 non-null    float64\n"," 10  CPI_Communication  198 non-null    float64\n"," 11  CPI_Education      198 non-null    float64\n","dtypes: float64(10), int64(2)\n","memory usage: 18.7 KB\n"]}]},{"cell_type":"code","source":["# check for the null value\n","df.isnull().any(axis=1).sum()\n","print(df.isna().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gakuaDvEt9zS","executionInfo":{"status":"ok","timestamp":1738237905535,"user_tz":-60,"elapsed":13,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"8667d9d8-0f14-452c-9c9c-5d03952261f9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Year                 0\n","Month                0\n","Inflation_Rate       0\n","Crude Oil Price      1\n","Production           1\n","Crude Oil Export     1\n","CPI_Food             0\n","CPI_Energy           0\n","CPI_Health           0\n","CPI_Transport        0\n","CPI_Communication    0\n","CPI_Education        0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["#df=df.fillna(method=\"ffill\")\n","df['Crude Oil Price'] = df['Crude Oil Price'].fillna(df['Crude Oil Price'].mean())\n","df['Production'] = df['Production'].fillna(df['Production'].median())\n","df['Crude Oil Export'] = df['Crude Oil Export'].fillna(df['Crude Oil Export'].mean())\n","df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b-VKrj32B5bo","executionInfo":{"status":"ok","timestamp":1738237905535,"user_tz":-60,"elapsed":10,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"3848d1bb-4dca-42b5-d1ba-4b1bffd04436"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 198 entries, 0 to 197\n","Data columns (total 12 columns):\n"," #   Column             Non-Null Count  Dtype  \n","---  ------             --------------  -----  \n"," 0   Year               198 non-null    int64  \n"," 1   Month              198 non-null    int64  \n"," 2   Inflation_Rate     198 non-null    float64\n"," 3   Crude Oil Price    198 non-null    float64\n"," 4   Production         198 non-null    float64\n"," 5   Crude Oil Export   198 non-null    float64\n"," 6   CPI_Food           198 non-null    float64\n"," 7   CPI_Energy         198 non-null    float64\n"," 8   CPI_Health         198 non-null    float64\n"," 9   CPI_Transport      198 non-null    float64\n"," 10  CPI_Communication  198 non-null    float64\n"," 11  CPI_Education      198 non-null    float64\n","dtypes: float64(10), int64(2)\n","memory usage: 18.7 KB\n"]}]},{"cell_type":"code","source":["df[[\"Inflation_Rate\",\"Crude Oil Price\",\"Production\",\"Crude Oil Export\",\"CPI_Food\",\"CPI_Energy\",\"CPI_Transport\",\"Year\",\"Month\"]].corr()\n","#sns.heatmap(df[[\"Inflation_Rate\",\"Crude Oil Price\",\"Production\",\"Crude Oil Export\"]].corr()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":331},"id":"kPaiOL3eWLJo","executionInfo":{"status":"ok","timestamp":1738237905535,"user_tz":-60,"elapsed":9,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"c89fcd03-f8e9-4a97-d950-4ce2e040d43b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  Inflation_Rate  Crude Oil Price  Production  \\\n","Inflation_Rate          1.000000        -0.141145   -0.745936   \n","Crude Oil Price        -0.141145         1.000000    0.159421   \n","Production             -0.745936         0.159421    1.000000   \n","Crude Oil Export       -0.748878         0.159455    0.999789   \n","CPI_Food                0.800314        -0.079887   -0.837206   \n","CPI_Energy              0.768919        -0.159344   -0.846849   \n","CPI_Transport           0.788999        -0.113606   -0.847551   \n","Year                    0.632385        -0.264881   -0.815089   \n","Month                   0.001738        -0.026655   -0.024292   \n","\n","                  Crude Oil Export  CPI_Food  CPI_Energy  CPI_Transport  \\\n","Inflation_Rate           -0.748878  0.800314    0.768919       0.788999   \n","Crude Oil Price           0.159455 -0.079887   -0.159344      -0.113606   \n","Production                0.999789 -0.837206   -0.846849      -0.847551   \n","Crude Oil Export          1.000000 -0.840051   -0.849546      -0.850473   \n","CPI_Food                 -0.840051  1.000000    0.984782       0.995994   \n","CPI_Energy               -0.849546  0.984782    1.000000       0.995091   \n","CPI_Transport            -0.850473  0.995994    0.995091       1.000000   \n","Year                     -0.817486  0.896639    0.953703       0.928694   \n","Month                    -0.023275 -0.012418   -0.003494      -0.006995   \n","\n","                      Year     Month  \n","Inflation_Rate    0.632385  0.001738  \n","Crude Oil Price  -0.264881 -0.026655  \n","Production       -0.815089 -0.024292  \n","Crude Oil Export -0.817486 -0.023275  \n","CPI_Food          0.896639 -0.012418  \n","CPI_Energy        0.953703 -0.003494  \n","CPI_Transport     0.928694 -0.006995  \n","Year              1.000000 -0.045545  \n","Month            -0.045545  1.000000  "],"text/html":["\n","  <div id=\"df-30174104-4b35-4c7a-9ee3-b3cd4cf49468\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Inflation_Rate</th>\n","      <th>Crude Oil Price</th>\n","      <th>Production</th>\n","      <th>Crude Oil Export</th>\n","      <th>CPI_Food</th>\n","      <th>CPI_Energy</th>\n","      <th>CPI_Transport</th>\n","      <th>Year</th>\n","      <th>Month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Inflation_Rate</th>\n","      <td>1.000000</td>\n","      <td>-0.141145</td>\n","      <td>-0.745936</td>\n","      <td>-0.748878</td>\n","      <td>0.800314</td>\n","      <td>0.768919</td>\n","      <td>0.788999</td>\n","      <td>0.632385</td>\n","      <td>0.001738</td>\n","    </tr>\n","    <tr>\n","      <th>Crude Oil Price</th>\n","      <td>-0.141145</td>\n","      <td>1.000000</td>\n","      <td>0.159421</td>\n","      <td>0.159455</td>\n","      <td>-0.079887</td>\n","      <td>-0.159344</td>\n","      <td>-0.113606</td>\n","      <td>-0.264881</td>\n","      <td>-0.026655</td>\n","    </tr>\n","    <tr>\n","      <th>Production</th>\n","      <td>-0.745936</td>\n","      <td>0.159421</td>\n","      <td>1.000000</td>\n","      <td>0.999789</td>\n","      <td>-0.837206</td>\n","      <td>-0.846849</td>\n","      <td>-0.847551</td>\n","      <td>-0.815089</td>\n","      <td>-0.024292</td>\n","    </tr>\n","    <tr>\n","      <th>Crude Oil Export</th>\n","      <td>-0.748878</td>\n","      <td>0.159455</td>\n","      <td>0.999789</td>\n","      <td>1.000000</td>\n","      <td>-0.840051</td>\n","      <td>-0.849546</td>\n","      <td>-0.850473</td>\n","      <td>-0.817486</td>\n","      <td>-0.023275</td>\n","    </tr>\n","    <tr>\n","      <th>CPI_Food</th>\n","      <td>0.800314</td>\n","      <td>-0.079887</td>\n","      <td>-0.837206</td>\n","      <td>-0.840051</td>\n","      <td>1.000000</td>\n","      <td>0.984782</td>\n","      <td>0.995994</td>\n","      <td>0.896639</td>\n","      <td>-0.012418</td>\n","    </tr>\n","    <tr>\n","      <th>CPI_Energy</th>\n","      <td>0.768919</td>\n","      <td>-0.159344</td>\n","      <td>-0.846849</td>\n","      <td>-0.849546</td>\n","      <td>0.984782</td>\n","      <td>1.000000</td>\n","      <td>0.995091</td>\n","      <td>0.953703</td>\n","      <td>-0.003494</td>\n","    </tr>\n","    <tr>\n","      <th>CPI_Transport</th>\n","      <td>0.788999</td>\n","      <td>-0.113606</td>\n","      <td>-0.847551</td>\n","      <td>-0.850473</td>\n","      <td>0.995994</td>\n","      <td>0.995091</td>\n","      <td>1.000000</td>\n","      <td>0.928694</td>\n","      <td>-0.006995</td>\n","    </tr>\n","    <tr>\n","      <th>Year</th>\n","      <td>0.632385</td>\n","      <td>-0.264881</td>\n","      <td>-0.815089</td>\n","      <td>-0.817486</td>\n","      <td>0.896639</td>\n","      <td>0.953703</td>\n","      <td>0.928694</td>\n","      <td>1.000000</td>\n","      <td>-0.045545</td>\n","    </tr>\n","    <tr>\n","      <th>Month</th>\n","      <td>0.001738</td>\n","      <td>-0.026655</td>\n","      <td>-0.024292</td>\n","      <td>-0.023275</td>\n","      <td>-0.012418</td>\n","      <td>-0.003494</td>\n","      <td>-0.006995</td>\n","      <td>-0.045545</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-30174104-4b35-4c7a-9ee3-b3cd4cf49468')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-30174104-4b35-4c7a-9ee3-b3cd4cf49468 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-30174104-4b35-4c7a-9ee3-b3cd4cf49468');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bc5fce0a-4dcc-4d9e-9df0-ad8bf7cdb578\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bc5fce0a-4dcc-4d9e-9df0-ad8bf7cdb578')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bc5fce0a-4dcc-4d9e-9df0-ad8bf7cdb578 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"#sns\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"Inflation_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6868749549422707,\n        \"min\": -0.7488778153274664,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.6323845788295375,\n          -0.14114532805486169,\n          0.7689194159172669\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Crude Oil Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.37991883489372147,\n        \"min\": -0.26488070992528256,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          -0.26488070992528256,\n          1.0,\n          -0.15934448124175285\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Production\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7871574887086166,\n        \"min\": -0.8475513390447954,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          -0.8150885668476008,\n          0.15942148545112234,\n          -0.8468492073899507\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Crude Oil Export\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7885072871519633,\n        \"min\": -0.8504732423934644,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          -0.8174859970756894,\n          0.15945517418202299,\n          -0.8495455107277007\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI_Food\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7809997853025931,\n        \"min\": -0.8400509440964025,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.8966388447737599,\n          -0.07988689022483139,\n          0.9847824783764452\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI_Energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7926881077238814,\n        \"min\": -0.8495455107277007,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.9537032026981822,\n          -0.15934448124175285,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI_Transport\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.79007099138239,\n        \"min\": -0.8504732423934644,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.9286943649128595,\n          -0.11360649592590565,\n          0.995091188977258\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7667930293524551,\n        \"min\": -0.8174859970756894,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          1.0,\n          -0.26488070992528256,\n          0.9537032026981822\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3395099797187016,\n        \"min\": -0.045545379328411066,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          -0.045545379328411066,\n          -0.026654656256734827,\n          -0.0034938785091325852\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":86}]},{"cell_type":"code","source":["sns.heatmap(df[[\"Inflation_Rate\",\"Crude Oil Price\",\"Production\",\"Crude Oil Export\",\"CPI_Food\",\"CPI_Energy\",\"CPI_Transport\",\"Year\",\"Month\"]].corr())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":553},"id":"aRsXk6ovX0iH","executionInfo":{"status":"ok","timestamp":1738237906450,"user_tz":-60,"elapsed":923,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"dba595c0-1ab2-407d-e7a2-f05aaecfd8fd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":87},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.scatter(x=df[\"CPI_Food\"],y=df[\"Inflation_Rate\"])\n","plt.xlabel(\"CPI_\")\n","plt.ylabel(\"Inflation_Rate\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"oWmPzWdZeCUJ","executionInfo":{"status":"ok","timestamp":1738237906450,"user_tz":-60,"elapsed":7,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"f3d51a73-763e-4942-cee9-d5a5cc0ddc33"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Inflation_Rate')"]},"metadata":{},"execution_count":88},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.scatter(x=df[\"CPI_Transport\"],y=df[\"Inflation_Rate\"])\n","plt.xlabel(\"CPI_Transport\")\n","plt.ylabel(\"Inflation_Rate\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"xjivQpKCefMO","executionInfo":{"status":"ok","timestamp":1738237907264,"user_tz":-60,"elapsed":819,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"f838a214-d670-4468-d50c-48fc65f3ca6f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Inflation_Rate')"]},"metadata":{},"execution_count":89},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.boxplot(df[\"CPI_Food\"])\n","plt.title(\"Boxplot of CPI_Food Value\")\n","plt.ylabel(\"CPI_Food\")\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"yrfO4gTRgSbZ","executionInfo":{"status":"ok","timestamp":1738237907264,"user_tz":-60,"elapsed":10,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"74f6cc16-6e10-4b3b-9929-930a69eeda17"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["Q1 = df[\"CPI_Food\"].quantile(0.25)\n","Q3 = df[\"CPI_Food\"].quantile(0.75)\n","print(Q1,Q3)\n","IQR = Q3 - Q1\n","print(IQR)\n","\n","lower_bound = Q1 - 1.5 * IQR\n","upper_bound = Q3 + 1.5 * IQR\n","print(lower_bound)\n","print(upper_bound)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X43pdjcHhPNE","executionInfo":{"status":"ok","timestamp":1738237907265,"user_tz":-60,"elapsed":10,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"673da437-8f89-4dce-f039-7e024d8245a6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["129.971844875 357.349555225\n","227.37771035000003\n","-211.09472065000006\n","698.4161207500001\n"]}]},{"cell_type":"code","source":["df[\"CPI_Food\"] = np.where(df[\"CPI_Food\"] > upper_bound, upper_bound, df[\"CPI_Food\"])"],"metadata":{"id":"5ZZYQEe8hhM2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.boxplot(df[\"CPI_Food\"])\n","plt.title(\"Boxplot of CPI_Food Value\")\n","plt.ylabel(\"CPI_Food\")\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"1eyjk8BGhvsj","executionInfo":{"status":"ok","timestamp":1738237907265,"user_tz":-60,"elapsed":9,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"f33d74c6-5fd9-40ec-d678-7d897f18458d"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.scatter(x=df[\"CPI_Food\"],y=df[\"Inflation_Rate\"])\n","plt.xlabel(\"CPI_Food\")\n","plt.ylabel(\"Inflation_Rate\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"lbogxx6Ph2L-","executionInfo":{"status":"ok","timestamp":1738237907983,"user_tz":-60,"elapsed":726,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"a7eabcf5-95f3-4bca-f0f8-9deae9c51f79"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Inflation_Rate')"]},"metadata":{},"execution_count":94},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df[[\"CPI_Food\",\"Inflation_Rate\"]]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"0e1IBvAGnMwH","executionInfo":{"status":"ok","timestamp":1738237907984,"user_tz":-60,"elapsed":16,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"f325b303-3e4d-4949-9327-6866452626f1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       CPI_Food  Inflation_Rate\n","0     75.534431          8.6000\n","1     75.154185          8.0000\n","2     78.242523          7.8000\n","3     79.434268          8.2000\n","4     80.783677          9.7000\n","..          ...             ...\n","193  698.416121         24.1625\n","194  698.416121         24.1625\n","195  698.416121         24.1625\n","196  698.416121         24.1625\n","197  698.416121         24.1625\n","\n","[198 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-ae1dc5a2-8ad3-4bab-92ea-267155ee48a3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CPI_Food</th>\n","      <th>Inflation_Rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>75.534431</td>\n","      <td>8.6000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>75.154185</td>\n","      <td>8.0000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>78.242523</td>\n","      <td>7.8000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>79.434268</td>\n","      <td>8.2000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>80.783677</td>\n","      <td>9.7000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>193</th>\n","      <td>698.416121</td>\n","      <td>24.1625</td>\n","    </tr>\n","    <tr>\n","      <th>194</th>\n","      <td>698.416121</td>\n","      <td>24.1625</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>698.416121</td>\n","      <td>24.1625</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>698.416121</td>\n","      <td>24.1625</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>698.416121</td>\n","      <td>24.1625</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>198 rows Ã— 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae1dc5a2-8ad3-4bab-92ea-267155ee48a3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ae1dc5a2-8ad3-4bab-92ea-267155ee48a3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ae1dc5a2-8ad3-4bab-92ea-267155ee48a3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bf8e9c15-7704-4524-bde9-edcad724f672\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bf8e9c15-7704-4524-bde9-edcad724f672')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bf8e9c15-7704-4524-bde9-edcad724f672 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df[[\\\"CPI_Food\\\",\\\"Inflation_Rate\\\"]]\",\n  \"rows\": 198,\n  \"fields\": [\n    {\n      \"column\": \"CPI_Food\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 181.1269612543513,\n        \"min\": 75.15418502,\n        \"max\": 698.4161207500001,\n        \"num_unique_values\": 188,\n        \"samples\": [\n          640.043131,\n          447.1811283,\n          97.86691398\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.480942065714995,\n        \"min\": 7.7,\n        \"max\": 24.162499999999998,\n        \"num_unique_values\": 142,\n        \"samples\": [\n          21.09,\n          10.4,\n          14.33\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":95}]},{"source":["from matplotlib import pyplot as plt\n","df['CPI_Food'].plot(kind='hist', bins=20, title='CPI_Food')\n","plt.gca().spines[['top', 'right',]].set_visible(False)"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"YSHFRfRBnet-","executionInfo":{"status":"ok","timestamp":1738237907984,"user_tz":-60,"elapsed":14,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"cc68dc8e-e92e-4828-e34c-474f07da6970"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["model_df=df[[\"CPI_Food\",\"Inflation_Rate\"]]\n","model_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Pvx706RYn5by","executionInfo":{"status":"ok","timestamp":1738237907984,"user_tz":-60,"elapsed":13,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"0296601c-3a1a-4a68-ab27-42407dff7daa"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       CPI_Food  Inflation_Rate\n","0     75.534431          8.6000\n","1     75.154185          8.0000\n","2     78.242523          7.8000\n","3     79.434268          8.2000\n","4     80.783677          9.7000\n","..          ...             ...\n","193  698.416121         24.1625\n","194  698.416121         24.1625\n","195  698.416121         24.1625\n","196  698.416121         24.1625\n","197  698.416121         24.1625\n","\n","[198 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-7c74f782-de05-4327-bc33-400a15f704b0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CPI_Food</th>\n","      <th>Inflation_Rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>75.534431</td>\n","      <td>8.6000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>75.154185</td>\n","      <td>8.0000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>78.242523</td>\n","      <td>7.8000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>79.434268</td>\n","      <td>8.2000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>80.783677</td>\n","      <td>9.7000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>193</th>\n","      <td>698.416121</td>\n","      <td>24.1625</td>\n","    </tr>\n","    <tr>\n","      <th>194</th>\n","      <td>698.416121</td>\n","      <td>24.1625</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>698.416121</td>\n","      <td>24.1625</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>698.416121</td>\n","      <td>24.1625</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>698.416121</td>\n","      <td>24.1625</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>198 rows Ã— 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7c74f782-de05-4327-bc33-400a15f704b0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7c74f782-de05-4327-bc33-400a15f704b0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7c74f782-de05-4327-bc33-400a15f704b0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-34d14a0f-e7ae-4e89-a6fc-3a0a35ceab1e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-34d14a0f-e7ae-4e89-a6fc-3a0a35ceab1e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-34d14a0f-e7ae-4e89-a6fc-3a0a35ceab1e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_6d34cb17-81d8-47e1-8dcf-2d3add85e576\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('model_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6d34cb17-81d8-47e1-8dcf-2d3add85e576 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('model_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"model_df","summary":"{\n  \"name\": \"model_df\",\n  \"rows\": 198,\n  \"fields\": [\n    {\n      \"column\": \"CPI_Food\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 181.1269612543513,\n        \"min\": 75.15418502,\n        \"max\": 698.4161207500001,\n        \"num_unique_values\": 188,\n        \"samples\": [\n          640.043131,\n          447.1811283,\n          97.86691398\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.480942065714995,\n        \"min\": 7.7,\n        \"max\": 24.162499999999998,\n        \"num_unique_values\": 142,\n        \"samples\": [\n          21.09,\n          10.4,\n          14.33\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["#divide data into feature matrix and taget vector\n","feature = [\"CPI_Food\"]\n","target = \"Inflation_Rate\"\n","\n","X= model_df[feature]\n","y= model_df[target]"],"metadata":{"id":"F4OZniGEomjN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# dividing data into trainind and testing\n","X_train, X_test,y_train,y_test =train_test_split(X,y, test_size=0.2, random_state=42)\n","print(X_train.shape, X_test.shape,y_train.shape,y_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JtUfToA9pC4P","executionInfo":{"status":"ok","timestamp":1738237907984,"user_tz":-60,"elapsed":11,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"7bf68fcb-0dc7-424b-c642-3ec762b13bd4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(158, 1) (40, 1) (158,) (40,)\n"]}]},{"cell_type":"code","source":["#creating a simple  linear regression model\n","model= LinearRegression()\n","model.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"_Lezz3F6ptbG","executionInfo":{"status":"ok","timestamp":1738237908608,"user_tz":-60,"elapsed":19,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"1641a6f7-824e-4322-df55-02039c6b697e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-3 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: #000;\n","  --sklearn-color-text-muted: #666;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-3 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-3 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-3 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-3 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-3 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-3 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-3 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-3 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-3 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-3 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-3 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-3 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-3 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-3 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-3 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: flex;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","  align-items: start;\n","  justify-content: space-between;\n","  gap: 0.5em;\n","}\n","\n","#sk-container-id-3 label.sk-toggleable__label .caption {\n","  font-size: 0.6rem;\n","  font-weight: lighter;\n","  color: var(--sklearn-color-text-muted);\n","}\n","\n","#sk-container-id-3 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"â–¸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-3 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-3 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-3 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-3 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"â–¾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-3 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-3 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-3 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-3 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-3 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-3 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-3 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-3 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-3 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-3 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-3 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 0.5em;\n","  text-align: center;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-3 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-3 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-3 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-3 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>LinearRegression</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":100}]},{"cell_type":"code","source":["# first use the model to generate prediction against X_test values\n","y_pred= model.predict(X_test)\n","y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cQd8DLqeqflx","executionInfo":{"status":"ok","timestamp":1738237908609,"user_tz":-60,"elapsed":17,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"ca3090e9-e862-43cb-8276-d34bdc48d5c4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([11.43400176, 13.44134421, 10.37794842, 15.05422469, 16.6468535 ,\n","       14.07012435, 14.96862858, 10.73239974, 10.46343718, 17.88239209,\n","       16.95683492, 10.34119369, 11.20854436, 11.23844364, 13.49734513,\n","       10.99407399, 13.90941251, 10.27067908, 15.46806357, 11.89657182,\n","       13.36816435, 17.22510133, 11.33343308, 22.21663851, 11.61000641,\n","       11.49232913, 13.65633122, 17.39270387, 13.58240573, 19.43764745,\n","       11.51594122, 11.69045062, 13.99363917, 11.81324513, 10.57760086,\n","       22.21663851, 12.22585759, 18.60025383, 10.48358421, 15.7789971 ])"]},"metadata":{},"execution_count":101}]},{"cell_type":"code","source":["# let's create baseline model\n","#baseline_model=\n","y_train_mean= y_train.mean()\n","y_train_mean"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"44DNcoVZqtgv","executionInfo":{"status":"ok","timestamp":1738237908609,"user_tz":-60,"elapsed":16,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"0c66b2fd-f6b0-4eb2-a43f-c552f6f6a86f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["13.838939873417724"]},"metadata":{},"execution_count":102}]},{"cell_type":"code","source":["# let create prediction using the baseline model\n","#baseline_pred=\n","y_train_pred=[y_train_mean] * len(y_test)\n","y_train_pred\n"],"metadata":{"id":"Hx_wENI9q4Cy","executionInfo":{"status":"ok","timestamp":1738237908609,"user_tz":-60,"elapsed":14,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"093af41c-93bf-44b0-8197-743012d236b1","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724]"]},"metadata":{},"execution_count":103}]},{"cell_type":"code","source":["# visualing the baseline on scatterplot\n","plt.plot(X_test.values,y_train_pred, color=\"orange\", label=\"Baseline Modei\")\n","plt.scatter(X,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"UBomuFG4pSSx","executionInfo":{"status":"ok","timestamp":1738237908609,"user_tz":-60,"elapsed":12,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"f7bca094-7658-4fdc-f9aa-0e2e4f58f130"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7f74fa67cf10>"]},"metadata":{},"execution_count":104},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","\n"],"metadata":{"id":"360f820GrKri"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#** CRUIDE OIL EXPORT AND INFLATION RATE**"],"metadata":{"id":"3YB5oQrTEJXa"}},{"cell_type":"code","source":["plt.boxplot(df[\"Crude Oil Export\"])\n","plt.title(\"Boxplot of Crude Oil Export Value\")\n","plt.ylabel(\"Crude oil Export\")\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"R6Yf85dnFpru","executionInfo":{"status":"ok","timestamp":1738238683522,"user_tz":-60,"elapsed":401,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"385d3e63-44d2-47ac-c315-2045eea0fd48"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.scatter(x=df[\"Crude Oil Export\"],y=df[\"Inflation_Rate\"])\n","plt.xlabel(\"Crude Oil Export\")\n","plt.ylabel(\"Inflation_Rate\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"WzBjq43DaCES","executionInfo":{"status":"ok","timestamp":1738237908609,"user_tz":-60,"elapsed":9,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"33496662-375b-47f8-dd19-81370c9517e4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Inflation_Rate')"]},"metadata":{},"execution_count":105},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df[[\"Crude Oil Export\",\"Inflation_Rate\"]]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"-4L0X9myH6RG","executionInfo":{"status":"ok","timestamp":1738239136580,"user_tz":-60,"elapsed":335,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"d5fc72bd-d4fb-46bf-f149-c64934bf0954"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Crude Oil Export  Inflation_Rate\n","0                1.72          8.6000\n","1                1.63          8.0000\n","2                1.61          7.8000\n","3                1.51          8.2000\n","4                1.60          9.7000\n","..                ...             ...\n","193              0.87         24.1625\n","194              0.78         24.1625\n","195              0.83         24.1625\n","196              0.80         24.1625\n","197              0.83         24.1625\n","\n","[198 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-6cc1a4b4-4669-4dd1-ad56-6764391c6ceb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Crude Oil Export</th>\n","      <th>Inflation_Rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.72</td>\n","      <td>8.6000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.63</td>\n","      <td>8.0000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.61</td>\n","      <td>7.8000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.51</td>\n","      <td>8.2000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.60</td>\n","      <td>9.7000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>193</th>\n","      <td>0.87</td>\n","      <td>24.1625</td>\n","    </tr>\n","    <tr>\n","      <th>194</th>\n","      <td>0.78</td>\n","      <td>24.1625</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>0.83</td>\n","      <td>24.1625</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>0.80</td>\n","      <td>24.1625</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>0.83</td>\n","      <td>24.1625</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>198 rows Ã— 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6cc1a4b4-4669-4dd1-ad56-6764391c6ceb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6cc1a4b4-4669-4dd1-ad56-6764391c6ceb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6cc1a4b4-4669-4dd1-ad56-6764391c6ceb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a744cd4b-1c34-4059-9592-ef7a1605ab03\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a744cd4b-1c34-4059-9592-ef7a1605ab03')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a744cd4b-1c34-4059-9592-ef7a1605ab03 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df[[\\\"Crude Oil Export\\\",\\\"Inflation_Rate\\\"]]\",\n  \"rows\": 198,\n  \"fields\": [\n    {\n      \"column\": \"Crude Oil Export\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4112935947567042,\n        \"min\": 0.49,\n        \"max\": 2.43,\n        \"num_unique_values\": 101,\n        \"samples\": [\n          0.95,\n          1.33,\n          1.49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.480942065714995,\n        \"min\": 7.7,\n        \"max\": 24.162499999999998,\n        \"num_unique_values\": 142,\n        \"samples\": [\n          21.09,\n          10.4,\n          14.33\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":108}]},{"cell_type":"code","source":["model_df1=df[[\"Crude Oil Export\",\"Inflation_Rate\"]]\n","model_df1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"H37UK7jWIOhX","executionInfo":{"status":"ok","timestamp":1738239204649,"user_tz":-60,"elapsed":333,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"afd59722-8969-4a40-ca85-0e40c84429d1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Crude Oil Export  Inflation_Rate\n","0                1.72          8.6000\n","1                1.63          8.0000\n","2                1.61          7.8000\n","3                1.51          8.2000\n","4                1.60          9.7000\n","..                ...             ...\n","193              0.87         24.1625\n","194              0.78         24.1625\n","195              0.83         24.1625\n","196              0.80         24.1625\n","197              0.83         24.1625\n","\n","[198 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-1b6b0931-0f01-4efa-a484-8e76191cfeba\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Crude Oil Export</th>\n","      <th>Inflation_Rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.72</td>\n","      <td>8.6000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.63</td>\n","      <td>8.0000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.61</td>\n","      <td>7.8000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.51</td>\n","      <td>8.2000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.60</td>\n","      <td>9.7000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>193</th>\n","      <td>0.87</td>\n","      <td>24.1625</td>\n","    </tr>\n","    <tr>\n","      <th>194</th>\n","      <td>0.78</td>\n","      <td>24.1625</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>0.83</td>\n","      <td>24.1625</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>0.80</td>\n","      <td>24.1625</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>0.83</td>\n","      <td>24.1625</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>198 rows Ã— 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b6b0931-0f01-4efa-a484-8e76191cfeba')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1b6b0931-0f01-4efa-a484-8e76191cfeba button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1b6b0931-0f01-4efa-a484-8e76191cfeba');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fe79958c-de6e-4942-86a2-19621f1ff445\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fe79958c-de6e-4942-86a2-19621f1ff445')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fe79958c-de6e-4942-86a2-19621f1ff445 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_dd0f4c49-ea88-487b-9cf2-e30ac96ed9f6\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('model_df1')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_dd0f4c49-ea88-487b-9cf2-e30ac96ed9f6 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('model_df1');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"model_df1","summary":"{\n  \"name\": \"model_df1\",\n  \"rows\": 198,\n  \"fields\": [\n    {\n      \"column\": \"Crude Oil Export\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4112935947567042,\n        \"min\": 0.49,\n        \"max\": 2.43,\n        \"num_unique_values\": 101,\n        \"samples\": [\n          0.95,\n          1.33,\n          1.49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.480942065714995,\n        \"min\": 7.7,\n        \"max\": 24.162499999999998,\n        \"num_unique_values\": 142,\n        \"samples\": [\n          21.09,\n          10.4,\n          14.33\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":109}]},{"cell_type":"code","source":["#divide data into feature matrix and taget vector\n","feature = [\"Crude Oil Export\"]\n","target = \"Inflation_Rate\"\n","\n","X= model_df1[feature]\n","y= model_df1[target]"],"metadata":{"id":"hArlpsDsIrkW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[" #dividing data into trainind and testing\n","X_train, X_test,y_train,y_test =train_test_split(X,y, test_size=0.2, random_state=42)\n","print(X_train.shape, X_test.shape,y_train.shape,y_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d9ZAv5jyJ9IC","executionInfo":{"status":"ok","timestamp":1738239820260,"user_tz":-60,"elapsed":302,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"2c16e2d9-040c-41d1-deed-16e1766c5574"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(158, 1) (40, 1) (158,) (40,)\n"]}]},{"cell_type":"code","source":["#creating a simple  linear regression model\n","model= LinearRegression()\n","model.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"X1A1VEOzK4lq","executionInfo":{"status":"ok","timestamp":1738239903207,"user_tz":-60,"elapsed":309,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"1be6cd34-4f40-4096-e743-bf55583163da"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-4 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: #000;\n","  --sklearn-color-text-muted: #666;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-4 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-4 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-4 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-4 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-4 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-4 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-4 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-4 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-4 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-4 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-4 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-4 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-4 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-4 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-4 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: flex;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","  align-items: start;\n","  justify-content: space-between;\n","  gap: 0.5em;\n","}\n","\n","#sk-container-id-4 label.sk-toggleable__label .caption {\n","  font-size: 0.6rem;\n","  font-weight: lighter;\n","  color: var(--sklearn-color-text-muted);\n","}\n","\n","#sk-container-id-4 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"â–¸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-4 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-4 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-4 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-4 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"â–¾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-4 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-4 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-4 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-4 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-4 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-4 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-4 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-4 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-4 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-4 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-4 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 0.5em;\n","  text-align: center;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-4 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-4 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-4 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-4 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>LinearRegression</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":114}]},{"cell_type":"code","source":["# first use the model to generate prediction against X_test values\n","y_pred= model.predict(X_test)\n","y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WdFcQCTBK3PW","executionInfo":{"status":"ok","timestamp":1738239947197,"user_tz":-60,"elapsed":4,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"8b0a0520-6df7-4e46-9c6b-b6ad50e04e59"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([12.92542138, 13.09210081, 11.34196683, 12.75874195, 18.50918215,\n","       14.59221564, 12.59206253,  9.17513429, 12.00868454, 19.84261756,\n","       17.92580416, 14.3421965 ,  9.17513429,  9.42515343, 13.25878023,\n","       10.17521085, 15.0089142 , 11.00860798, 12.84208167, 11.42530655,\n","       13.59213908, 18.92588072, 11.25862712, 20.00929698, 10.84192855,\n","       10.75858884, 13.50879937, 19.50925871, 13.59213908, 21.75943096,\n","       11.25862712, 10.42522999, 15.0089142 , 11.67532568, 10.42522999,\n","       18.67586158, 11.92534482, 19.67593813, 12.17536396, 16.09233047])"]},"metadata":{},"execution_count":115}]},{"cell_type":"code","source":["# let's create baseline model\n","#baseline_model=\n","y_train_mean= y_train.mean()\n","y_train_mean"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QpUGadS9LV9D","executionInfo":{"status":"ok","timestamp":1738240008610,"user_tz":-60,"elapsed":308,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"34b604e0-6970-4772-bd14-2db72e0ec332"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["13.838939873417724"]},"metadata":{},"execution_count":116}]},{"cell_type":"code","source":["# let create prediction using the baseline model\n","#baseline_pred=\n","y_train_pred=[y_train_mean] * len(y_test)\n","y_train_pred\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"id":"A1oVFK57LrFs","executionInfo":{"status":"ok","timestamp":1738240102511,"user_tz":-60,"elapsed":312,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"c628f18e-8496-4da1-de64-83b6cc6a2e07"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724,\n"," 13.838939873417724]"]},"metadata":{},"execution_count":117}]},{"cell_type":"code","source":["# visualing the baseline on scatterplot\n","plt.plot(X_test.values,y_train_pred, color=\"orange\", label=\"Baseline Model\")\n","plt.scatter(X,y)\n","plt.xlabel(\"Crude Oil Export\")\n","plt.ylabel(\"Inflation_Rate\")\n","plt.legend()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"9Eb5Mm19L_LC","executionInfo":{"status":"ok","timestamp":1738240493144,"user_tz":-60,"elapsed":497,"user":{"displayName":"Tobiloba Adebamiro","userId":"09802051110718869624"}},"outputId":"12891d22-f234-4714-8394-7d5b75695f15"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7f752fba5c90>"]},"metadata":{},"execution_count":119},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}